// https://jkchao.github.io/typescript-book-chinese/
/// <reference types="vite/client" />
/// <reference types="unplugin-turbo-console/client" />

declare interface Fn<T = any, R = T> {
  (...arg: T[]): R
}

declare type PromiseFn<T = any> = (args?: T) => Promise<void>

declare type Recordable<T = any> = Record<string, T>

declare type IActionType = 'create' | 'update'

declare type ITargetContext = '_self' | '_blank'

declare type ValueOf<T> = T[keyof T]

// 基础类型检查
type IsPrimitive<T> =
  T extends string | number | boolean | null | undefined | symbol | bigint ? true : false

// 函数类型检查
type IsFunction<T> = T extends Fn ? true : false

// 安全的深度递归类型
type SafeDeepMaybeRef<T> =
  IsPrimitive<T> extends true ? MaybeRefOrGetter<T> :
    T extends Ref<infer V> ? MaybeRefOrGetter<V> :
        [T] extends [Array<infer U>] ? Array<SafeDeepMaybeRef<U>> :
          IsFunction<T> extends true ? T : // 直接返回函数类型，不递归处理
              [T] extends [object] ? { [K in keyof T]: SafeDeepMaybeRef<T[K]> } :
                MaybeRefOrGetter<T>

// LINKS https://medium.com/@an.chmelev/typescript-performance-and-type-optimization-in-large-scale-projects-18e62bd37cfb
// generated by doubao
type IDeepMaybeRef<T> = SafeDeepMaybeRef<T>

const __APP_INFO__: {
  name: string
  version: string
  deps: Recordable<string>
  devDeps: Recordable<string>
  urls: {
    doc: string
    demo: string
    github: string
    author: string
  }
  lastBuildTime: string
}
